---
# Install jira

- name: create system user
  user:
    name={{ jira_user }}
    password={{ jira_pass }}
    home={{ jira_home }}
    system=yes
    shell=/bin/bash

- name: preapre directories
  file:
    path={{ item }}
    owner={{ jira_user }}
    group={{ jira_user }}
    state=directory
  with_items:
    - "{{ jira_config }}"
    - "{{ jira_catalina }}"

- name: copy init.d script
  template:
    src=jira.j2
    dest=/etc/init.d/jira
    owner={{ jira_user }}
    group={{ jira_user }}
    mode=0755

- name: copy config files
  template:
    src="{{ item }}.j2"
    dest="/etc/jira/{{ item }}"
    owner={{ jira_user }}
    group={{ jira_user }}
    mode=0644
  with_items:
    - setenv.sh
    - server.xml
    - dbconfig.xml

- name: download package
  get_url:
    url={{ jira_url }}
    dest={{ jira_archive }}
    sha256sum={{ jira_sha256 }}

- name: unarchive package
  shell: tar zxvf {{ jira_archive }} -C {{ jira_catalina }} --strip-components=1; chown -Rf {{ jira_user }}:{{ jira_user }} {{ jira_catalina }}
  args:
    creates: "{{ jira_catalina }}/bin/start-jira.sh"

- name: relink setenv.sh
  file:
    src="{{ jira_config }}/setenv.sh"
    dest="{{ jira_catalina }}/bin/setenv.sh"
    state=link
    force=yes

- name: relink server.xml
  file:
    src="{{ jira_config }}/server.xml"
    dest="{{ jira_catalina }}/conf/server.xml"
    state=link
    force=yes

- name: relink dbconfig.xml
  file:
    src="{{ jira_config }}/dbconfig.xml"
    dest="{{ jira_home }}/dbconfig.xml"
    state=link
    force=yes

- name: create postgresql user
  become: yes
  become_user: postgres
  postgresql_user: name={{ jira_user }} password={{ jira_pass }}

- name: create postgresql db
  become: yes
  become_user: postgres
  postgresql_db: name={{ jira_user }} owner={{ jira_user }} encoding=UNICODE lc_collate=C lc_ctype=C template=template0

- name: enable service
  service: name=jira enabled=yes
  notify: restart jira
